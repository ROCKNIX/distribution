diff -rupN GamepadTester.orig/CMakeLists.txt GamepadTester/CMakeLists.txt
--- GamepadTester.orig/CMakeLists.txt	2024-04-26 21:31:53.727460671 +0000
+++ GamepadTester/CMakeLists.txt	2024-04-26 21:30:53.862216932 +0000
@@ -6,7 +6,6 @@ set(CMAKE_CXX_STANDARD_REQUIRED TRUE)
 project(gamepad_test VERSION 1.0)
 
 link_libraries(SDL2 SDL2_gfx)
-include_directories(/usr/include/SDL2)
 
 set(CMAKE_CXX_FLAGS "\
  -D_REENTRANT\
diff -rupN GamepadTester.orig/src/main.cpp GamepadTester/src/main.cpp
--- GamepadTester.orig/src/main.cpp	2024-04-26 21:31:53.731460755 +0000
+++ GamepadTester/src/main.cpp	2024-04-26 22:27:08.203425064 +0000
@@ -38,7 +38,7 @@ int main()
     SDL_Renderer* rend = SDL_CreateRenderer(window, 0, 0);
     gfxPrimitivesSetFont(gfxPrimitivesFontdata, 8, 8);
 
-    SDL_GameControllerAddMappingsFromFile("../gamecontrollerdb.txt");
+    SDL_GameControllerAddMappingsFromFile("/storage/.config/SDL-GameControllerDB/gamecontrollerdb.txt");
 
     SDL_GameController* gcont = nullptr;
     StickState leftStickState{};
@@ -74,7 +74,6 @@ int main()
 
             case SDL_CONTROLLERBUTTONDOWN:
                 std::cout << "Controller button down: " << +event.cbutton.button  << '\n';
-                SDL_GameControllerRumble(gcont, 0, 0xffff/2, 200);
                 buttonStates[event.cbutton.button] = true;
                 break;
 
@@ -83,16 +82,6 @@ int main()
                 buttonStates[event.cbutton.button] = false;
                 break;
 
-            case SDL_JOYBUTTONDOWN:
-                if (event.jbutton.button == 8)
-                    buttonStates[SDL_CONTROLLER_BUTTON_GUIDE] = true;
-                break;
-
-            case SDL_JOYBUTTONUP:
-                if (event.jbutton.button == 8)
-                    buttonStates[SDL_CONTROLLER_BUTTON_GUIDE] = false;
-                break;
-
             case SDL_CONTROLLERAXISMOTION:
                 std::cout << "Controller axis movement\n";
                 std::cout << "\tAxis: " << +event.caxis.axis << '\n';
@@ -153,45 +142,57 @@ int main()
             filledCircleColor(rend, WIN_W-300+rightStickState.x*30, WIN_H-300+rightStickState.y*30, 30,
                     (buttonStates[SDL_CONTROLLER_BUTTON_RIGHTSTICK] ? 0xffffffff : 0));
 
-            // Y button
+            // X button
             aacircleRGBA(rend, WIN_W-300, 300-40, 20, 255, 255, 0, 255);
-            if (buttonStates[SDL_CONTROLLER_BUTTON_Y])
+            if (buttonStates[SDL_CONTROLLER_BUTTON_X])
                 filledCircleRGBA(rend, WIN_W-300, 300-40, 20, 255, 255, 0, 255);
 
-            // X button
+            // Y button
             aacircleRGBA(rend, WIN_W-300-40, 300+40-40, 20, 100, 100, 255, 255);
-            if (buttonStates[SDL_CONTROLLER_BUTTON_X])
+            if (buttonStates[SDL_CONTROLLER_BUTTON_Y])
                 filledCircleRGBA(rend, WIN_W-300-40, 300+40-40, 20, 100, 100, 255, 255);
 
-            // B button
+            // A button
             aacircleRGBA(rend, WIN_W-300+40, 300+40-40, 20, 255, 0, 0, 255);
-            if (buttonStates[SDL_CONTROLLER_BUTTON_B])
+            if (buttonStates[SDL_CONTROLLER_BUTTON_A])
                 filledCircleRGBA(rend, WIN_W-300+40, 300+40-40, 20, 255, 0, 0, 255);
 
-            // A button
+            // B button
             aacircleRGBA(rend, WIN_W-300, 300+80-40, 20, 0, 255, 0, 255);
-            if (buttonStates[SDL_CONTROLLER_BUTTON_A])
+            if (buttonStates[SDL_CONTROLLER_BUTTON_B])
                 filledCircleRGBA(rend, WIN_W-300, 300+80-40, 20, 0, 255, 0, 255);
 
             // D-pad up
             aatrigonRGBA(rend, 300, WIN_H-360, 280, WIN_H-320, 320, WIN_H-320, 255, 255, 255, 255);
-            if (dpadState & SDL_HAT_UP)
+            if (dpadState & SDL_HAT_UP) {
+                filledTrigonRGBA(rend, 300, WIN_H-360, 280, WIN_H-320, 320, WIN_H-320, 255, 255, 255, 255);
+	    } else if (buttonStates[SDL_CONTROLLER_BUTTON_DPAD_UP]) {
                 filledTrigonRGBA(rend, 300, WIN_H-360, 280, WIN_H-320, 320, WIN_H-320, 255, 255, 255, 255);
+	    }
 
             // D-pad down
             aatrigonRGBA(rend, 300, WIN_H-240, 280, WIN_H-280, 320, WIN_H-280, 255, 255, 255, 255);
-            if (dpadState & SDL_HAT_DOWN)
+            if (dpadState & SDL_HAT_DOWN) {
                 filledTrigonRGBA(rend, 300, WIN_H-240, 280, WIN_H-280, 320, WIN_H-280, 255, 255, 255, 255);
+	    } else if (buttonStates[SDL_CONTROLLER_BUTTON_DPAD_DOWN]) {
+                filledTrigonRGBA(rend, 300, WIN_H-240, 280, WIN_H-280, 320, WIN_H-280, 255, 255, 255, 255);
+	    }
 
             // D-pad left
             aatrigonRGBA(rend, 240, WIN_H-300, 280, WIN_H-320, 280, WIN_H-280, 255, 255, 255, 255);
-            if (dpadState & SDL_HAT_LEFT)
+            if (dpadState & SDL_HAT_LEFT) {
+                filledTrigonRGBA(rend, 240, WIN_H-300, 280, WIN_H-320, 280, WIN_H-280, 255, 255, 255, 255);
+	    } else if (buttonStates[SDL_CONTROLLER_BUTTON_DPAD_LEFT]) {
                 filledTrigonRGBA(rend, 240, WIN_H-300, 280, WIN_H-320, 280, WIN_H-280, 255, 255, 255, 255);
+	    }
 
             // D-pad right
             aatrigonRGBA(rend, 360, WIN_H-300, 320, WIN_H-320, 320, WIN_H-280, 255, 255, 255, 255);
-            if (dpadState & SDL_HAT_RIGHT)
+            if (dpadState & SDL_HAT_RIGHT) {
+                filledTrigonRGBA(rend, 360, WIN_H-300, 320, WIN_H-320, 320, WIN_H-280, 255, 255, 255, 255);
+	    } else if (buttonStates[SDL_CONTROLLER_BUTTON_DPAD_RIGHT]) {
                 filledTrigonRGBA(rend, 360, WIN_H-300, 320, WIN_H-320, 320, WIN_H-280, 255, 255, 255, 255);
+	    }
 
             // Left bumper
             rectangleColor(rend, 300-50, 300-150-20, 300+50, 300-150+20, 0xffffffff);
