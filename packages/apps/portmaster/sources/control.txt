#!/bin/bash

# SPDX-License-Identifier: GPL-2.0-or-later
# Copyright (C) 2024-present ROCKNIX (https://github.com/ROCKNIX)

# This file can and should be sourced by ports for various parameters to
# minimize script customizations and allow for easier future updates
# like adding additional supported devices.
# Thanks to JohnnyonFlame, dhwz, romadu, and shantigilbert for the
# suggestion and assistance with this.
# Source used for gptokeyb available at
# https://github.com/christianhaitian/gptokeyb
# Source used for oga_controls available at
# https://github.com/christianhaitian/oga_controls

. /etc/profile

directory="roms"
controlfolder="/$directory/ports/PortMaster"
ESUDO=""
ESUDOKILL="-1"
SDLDBUSERFILE="/storage/.config/SDL-GameControllerDB/gamecontrollerdb.txt"
clibs="/usr/lib/compat/"
raloc="/usr/bin"
raconf="--config /storage/.config/retroarch/retroarch.cfg"

case "${QUIRK_DEVICE}" in
  "Anbernic RG552")
    profile="rg552"
    lres="N"
    sticks="2"
  ;;
  "Hardkernel ODROID-GO-Ultra"|"Powkiddy RGB10 MAX 3 Pro")
    profile="s922x"
    lres="N"
    sticks="2"
  ;;
  "Powkiddy x55")
    profile="x55"
    lres="N"
    sticks="2"
  ;;
  "Anbernic RG351M")
    profile="anbernic"
    lres="Y"
    sticks="2"
  ;;
  "Anbernic RG351V")
    profile="anbernic"
    lres="N"
    sticks="1"
  ;;
  "ODROID-GO Advance*"|"Powkiddy RGB10")
    profile="oga"
    lres="Y"
    sticks="1"
  ;;
  "ODROID-GO Super")
    profile="ogs"
    lres="N"
    sticks="2"
  ;;
  "Anbernic RG35XX H")
    profile="anbernic"
    lres="N"
    sticks="2"
  ;;
  "Anbernic RG35XX Plus")
    profile="anbernic"
    lres="N"
    sticks="0"
  ;;
  *)
    profile="rg552"
    lres="N"
    sticks="2"
  ;;
esac


get_controls() {

    ANALOGSTICKS="${sticks}"
    LOWRES="${lres}"

    param_device="${profile}"

    # Clean up any former .port_input files
    rm -rf /tmp/port_input
    rm -rf /tmp/es_input.cfg

    # Dump connected device GUIDs
    /usr/bin/list-guid > /tmp/list-guid

    # Loop through connected device and extract ES xml mapping
    mkdir /tmp/port_input
    while read DGUID; do
      if [ ! -z "$(cat /storage/.config/emulationstation/es_input.cfg | grep ${DGUID})" ]; then
        cp -r /storage/.config/emulationstation/es_input.cfg /tmp/port_input/${DGUID}.xml
        xmlstarlet ed --inplace -d  "inputList/inputConfig[@deviceGUID!='${DGUID}']" /tmp/port_input/${DGUID}.xml
      fi
    done </tmp/list-guid

    # Combine mappings for each device
    sed -i '/inputList/d' /tmp/port_input/*.xml
    echo '<inputList>' > /tmp/es_input.cfg
    grep -vh '</\?inputConfig>>\|<?xml' /tmp/port_input/*.xml >> /tmp/es_input.cfg
    echo '</inputList>' >> /tmp/es_input.cfg

    # Set file
    export SDL_GAMECONTROLLERCONFIG_FILE="/tmp/gamecontrollerdb.txt"

    # Now find any controller mapped on emulationstation...
    /storage/.config/PortMaster/mapper.txt ${SDL_GAMECONTROLLERCONFIG_FILE} ${controlfolder}

    # Set compatability libs and run compatability script
    export LD_LIBRARY_PATH=${clibs}

    # Some ports want SDL_GAMECONTROLLERCONFIG, so let's fill it in
    sdl_controllerconfig="$(< "${SDL_GAMECONTROLLERCONFIG_FILE}")"
}

GPTOKEYB="$ESUDO $controlfolder/gptokeyb $ESUDOKILL"
