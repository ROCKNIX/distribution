diff -rupN mesa.orig/src/gallium/drivers/panfrost/pan_screen.c mesa/src/gallium/drivers/panfrost/pan_screen.c
--- mesa.orig/src/gallium/drivers/panfrost/pan_screen.c	2024-06-20 16:15:06.902881289 +0000
+++ mesa/src/gallium/drivers/panfrost/pan_screen.c	2024-06-20 16:19:33.693560497 +0000
@@ -723,7 +723,7 @@ panfrost_get_compute_param(struct pipe_s
        * the GLES3.1 spec minimum is 128, so we report 128 and limit
        * the register allocation of affected compute kernels.
        */
-      RET((uint64_t[]){dev->arch >= 6 ? 256 : 128});
+      RET((uint64_t []) { 64 });

    case PIPE_COMPUTE_CAP_MAX_GLOBAL_SIZE:
       RET((uint64_t[]){1024 * 1024 * 512 /* Maybe get memory */});
diff -rupN mesa.orig/src/mesa/main/version.c mesa/src/mesa/main/version.c
--- mesa.orig/src/mesa/main/version.c	2024-06-20 16:15:07.002883799 +0000
+++ mesa/src/mesa/main/version.c	2024-06-20 16:16:29.676956893 +0000
@@ -511,7 +511,7 @@ compute_version_es2(const struct gl_exte
                          extensions->EXT_texture_type_2_10_10_10_REV &&
                          consts->MaxColorAttachments >= 4);
    const bool es31_compute_shader =
-      consts->MaxComputeWorkGroupInvocations >= 128 &&
+      consts->MaxComputeWorkGroupInvocations >= 64 &&
       consts->Program[MESA_SHADER_COMPUTE].MaxShaderStorageBlocks &&
       consts->Program[MESA_SHADER_COMPUTE].MaxAtomicBuffers &&
       consts->Program[MESA_SHADER_COMPUTE].MaxImageUniforms;
