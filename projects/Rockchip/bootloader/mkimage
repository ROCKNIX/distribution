# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2024-present ROCKNIX (https://github.com/ROCKNIX)

mkimage_uboot() {
  if [ -f "${RELEASE_DIR}/3rdparty/bootloader/${SUBDEVICE}_uboot.bin" ]; then
    echo "image: writing ${SUBDEVICE}_uboot.bin to $(basename ${DISK})..."
    dd if="${RELEASE_DIR}/3rdparty/bootloader/${SUBDEVICE}_uboot.bin" of="${DISK}" bs=512 seek=64 conv=sync,noerror,notrunc >"${SAVE_ERROR}" 2>&1 || show_error
  elif [ -f "${RELEASE_DIR}/3rdparty/bootloader/uboot.bin" ]; then
    echo "image: writing uboot.bin to $(basename ${DISK})..."
    dd if="${RELEASE_DIR}/3rdparty/bootloader/uboot.bin" of="${DISK}" bs=512 seek=64 conv=sync,noerror,notrunc >"${SAVE_ERROR}" 2>&1 || show_error
  fi
}

mkimage_bootini() {
  if [ -f "${RELEASE_DIR}/3rdparty/bootloader/${SUBDEVICE}_boot.ini" ]; then
    echo "image: copying ${SUBDEVICE}_boot.ini..."
    mcopy "${RELEASE_DIR}/3rdparty/bootloader/${SUBDEVICE}_boot.ini" ::
  elif [ -f "${RELEASE_DIR}/3rdparty/bootloader/boot.ini" ]; then
    echo "image: copying boot.ini..."
    mcopy "${RELEASE_DIR}/3rdparty/bootloader/boot.ini" ::
  fi
}

mkimage_extlinux(){
  echo "image: set exlinux.conf to FDT /${DTB[0]}..."
  mkdir -p "${LE_TMP}/extlinux"
  cat << EOF > "${LE_TMP}/extlinux/extlinux.conf"
LABEL ${DISTRO}
  LINUX /${KERNEL_NAME}
  FDT /${DTB[0]}.dtb
  APPEND boot=LABEL=${DISTRO_BOOTLABEL} disk=LABEL=${DISTRO_DISKLABEL} ${EXTRA_CMDLINE}
EOF
  echo "image: copying exlinux.conf..."
  mcopy -s -o "${LE_TMP}/extlinux" ::
}

mkimage_extlinux_fdtdir(){
  echo "image: set extlinux.conf to FDTDIR /..."
  mkdir -p "${LE_TMP}/extlinux"
  cat << EOF > "${LE_TMP}/extlinux/extlinux.conf"
LABEL ${DISTRO}
  LINUX /${KERNEL_NAME}
  FDTDIR /
  APPEND boot=LABEL=${DISTRO_BOOTLABEL} disk=LABEL=${DISTRO_DISKLABEL} ${EXTRA_CMDLINE}
EOF
  echo "image: copying exlinux.conf..."
  mcopy -s -o "${LE_TMP}/extlinux" ::
}

mkimage_dtb() {
  echo "image: copying device trees..."
  for dtb in ${DTB[@]}; do
    echo "image: copying ${dtb}.dtb..."
    mcopy ${RELEASE_DIR}/3rdparty/bootloader/${dtb}.dtb ::
  done
  if [ -d ${RELEASE_DIR}/3rdparty/bootloader/overlays ]; then
    echo "image: copying device tree overlays..."
    mcopy -s ${RELEASE_DIR}/3rdparty/bootloader/overlays ::
  fi
}

DTBXML="${PROJECT_DIR}/${PROJECT}/bootloader/dtb.xml"
readarray DTB < <(xmlstarlet sel -t -v "//dtb/${DEVICE}/${SUBDEVICE}/file" ${DTBXML})
BOOTMETHOD=$(xmlstarlet sel -t -v "//dtb/${DEVICE}/${SUBDEVICE}/@bootmethod" ${DTBXML})

mkimage_dtb
mkimage_${BOOTMETHOD}
mkimage_uboot
