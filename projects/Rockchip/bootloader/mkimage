# SPDX-License-Identifier: GPL-2.0
# Copyright (C) 2022-24 JELOS (https://github.com/JustEnoughLinuxOS)
# Copyright (C) 2024-present ROCKNIX (https://github.com/ROCKNIX)

source ${PROJECT_DIR}/${PROJECT}/devices/${DEVICE}/options

case "${PKG_SOC}" in
  rk3399)
    IDBSEEK="bs=512 seek=64"
    ;;
esac

if [ -f "${RELEASE_DIR}/3rdparty/bootloader/idbloader.img" ]; then
  echo "image: burn idbloader.img to image... (${PKG_SOC},${IDBSEEK})"
  dd if="${RELEASE_DIR}/3rdparty/bootloader/idbloader.img" of="$DISK" ${IDBSEEK} conv=sync,noerror,notrunc >"${SAVE_ERROR}" 2>&1 || show_error
fi

case "${PKG_SOC}" in
  rk3399)
    if [ -f "${RELEASE_DIR}/3rdparty/bootloader/rk3399-uboot.bin" ]; then
      echo "image: burn u-boot.bin to image..."
      dd if="${RELEASE_DIR}/3rdparty/bootloader/rk3399-uboot.bin" of="${DISK}" bs=512 seek=64 conv=sync,noerror,notrunc >"${SAVE_ERROR}" 2>&1 || show_error
    fi
    ;;
esac

#Create boot.ini
if [ "${BOOT_INI}" == true ]; then
  echo "boot: create boot.ini..."
  if [ -e "${PROJECT_DIR}/${PROJECT}/devices/${DEVICE}/boot/boot.ini" ]; then
    cp -f ${PROJECT_DIR}/${PROJECT}/devices/${DEVICE}/boot/boot.ini ${LE_TMP}/boot.ini
    sed -e "s/@DISTRO_BOOTLABEL@/${DISTRO_BOOTLABEL}/" \
        -e "s/@DISTRO_DISKLABEL@/${DISTRO_DISKLABEL}/" \
        -e "s/@EXTRA_CMDLINE@/${EXTRA_CMDLINE}/" \
        -i "${LE_TMP}/boot.ini"

    mcopy -so "${LE_TMP}/boot.ini" ::
  else
    echo "ERROR: No boot.ini found in ${PROJECT_DIR}/${PROJECT}/devices/${DEVICE}/boot/."
    exit 1
  fi
fi

mkdir -p "${LE_TMP}/extlinux"

# copy device trees to part1
echo "image: copy device trees to image..."
for dtb in ${DEVICE_DTB[@]}; do
  mcopy ${RELEASE_DIR}/3rdparty/bootloader/${dtb}.dtb ::
done

# copy device tree overlays to part1
if [ -d ${RELEASE_DIR}/3rdparty/bootloader/overlays ]; then
  echo "image: copy device tree overlays to image..."
  mcopy -s ${RELEASE_DIR}/3rdparty/bootloader/overlays ::
fi

if [ "${EXT_LINUX_CONF}" == true ]; then
  mkdir -p "${LE_TMP}/extlinux"

  if [[ "${PKG_SOC}" != "rk3588" ]] && [[ "${TRUST_LABEL}" = "resource" || "${#DEVICE_DTB[@]}" -gt 1 ]]; then
    echo "image: Set FDTDIR to /..."
    FDTMODE="FDTDIR /"
  else
    echo "image: Set FDT to ${DEVICE_DTB}..."
    FDTMODE="FDT /${DEVICE_DTB}.dtb"
  fi

  echo "image: Set extlinux.conf..."
  cat << EOF > "${LE_TMP}/extlinux/extlinux.conf"
LABEL ${DISTRO}
  LINUX /${KERNEL_NAME}
  ${FDTMODE}
  APPEND boot=LABEL=${DISTRO_BOOTLABEL} disk=LABEL=${DISTRO_DISKLABEL} ${EXTRA_CMDLINE}
EOF

  mcopy -so "${LE_TMP}/extlinux" ::
fi
