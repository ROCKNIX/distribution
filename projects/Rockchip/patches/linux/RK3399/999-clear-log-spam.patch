diff -rupN linux.orig/drivers/gpio/gpio-rockchip.c linux/drivers/gpio/gpio-rockchip.c
--- linux.orig/drivers/gpio/gpio-rockchip.c	2024-04-12 20:11:09.129330342 +0000
+++ linux/drivers/gpio/gpio-rockchip.c	2024-05-01 23:09:29.557274731 +0000
@@ -335,13 +335,13 @@ static void rockchip_irq_demux(struct ir
 	unsigned long pending;
 	unsigned int irq;
 
-	dev_dbg(bank->dev, "got irq for bank %s\n", bank->name);
+	//dev_dbg(bank->dev, "got irq for bank %s\n", bank->name);
 
 	chained_irq_enter(chip, desc);
 
 	pending = readl_relaxed(bank->reg_base + bank->gpio_regs->int_status);
 	for_each_set_bit(irq, &pending, 32) {
-		dev_dbg(bank->dev, "handling irq %d\n", irq);
+		//dev_dbg(bank->dev, "handling irq %d\n", irq);
 
 		/*
 		 * Triggering IRQ on both rising and falling edge
diff -rupN linux.orig/drivers/input/touchscreen/goodix.c linux/drivers/input/touchscreen/goodix.c
--- linux.orig/drivers/input/touchscreen/goodix.c	2024-04-12 20:11:09.473341313 +0000
+++ linux/drivers/input/touchscreen/goodix.c	2024-05-01 23:09:29.557274731 +0000
@@ -1020,7 +1020,7 @@ retry_get_irq_gpio:
 	default:
 		if (ts->gpiod_int && ts->gpiod_rst) {
 			ts->reset_controller_at_probe = true;
-			ts->load_cfg_from_disk = true;
+			ts->load_cfg_from_disk = false;
 			ts->irq_pin_access_method = IRQ_PIN_ACCESS_GPIO;
 		}
 	}
diff -rupN linux.orig/sound/soc/codecs/hdmi-codec.c linux/sound/soc/codecs/hdmi-codec.c
--- linux.orig/sound/soc/codecs/hdmi-codec.c	2024-04-12 20:11:10.145362745 +0000
+++ linux/sound/soc/codecs/hdmi-codec.c	2024-05-01 23:10:25.914597595 +0000
@@ -438,7 +438,7 @@ static int hdmi_codec_startup(struct snd
 
 	mutex_lock(&hcp->lock);
 	if (hcp->busy) {
-		dev_err(dai->dev, "Only one simultaneous stream supported!\n");
+		//dev_err(dai->dev, "Only one simultaneous stream supported!\n");
 		mutex_unlock(&hcp->lock);
 		return -EINVAL;
 	}
diff -rupN linux.orig/sound/soc/soc-dai.c linux/sound/soc/soc-dai.c
--- linux.orig/sound/soc/soc-dai.c	2024-04-12 20:11:10.169363511 +0000
+++ linux/sound/soc/soc-dai.c	2024-05-01 23:18:20.597488414 +0000
@@ -23,10 +23,10 @@ static inline int _soc_dai_ret(struct sn
 	case -EPROBE_DEFER:
 	case -ENOTSUPP:
 		break;
-	default:
-		dev_err(dai->dev,
-			"ASoC: error at %s on %s: %d\n",
-			func, dai->name, ret);
+	//default:
+	//	dev_err(dai->dev,
+	//		"ASoC: error at %s on %s: %d\n",
+	//		func, dai->name, ret);
 	}
 
 	return ret;
