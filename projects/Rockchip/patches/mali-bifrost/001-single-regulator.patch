--- a/product/kernel/drivers/gpu/arm/midgard/mali_kbase_defs.h	2024-02-19 17:24:21.000000000 +0300
+++ b/product/kernel/drivers/gpu/arm/midgard/mali_kbase_defs.h	2024-03-18 23:51:35.201950500 +0300
@@ -141,7 +141,7 @@
  * This is dependent on support for of_property_read_u64_array() in the
  * kernel.
  */
-#define BASE_MAX_NR_CLOCKS_REGULATORS (2)
+#define BASE_MAX_NR_CLOCKS_REGULATORS (1)
 
 /* Forward declarations */
 struct kbase_context;
--- a/product/kernel/drivers/gpu/arm/midgard/mali_kbase_core_linux.c	2024-03-19 00:26:38.775395807 +0300
+++ b/product/kernel/drivers/gpu/arm/midgard/mali_kbase_core_linux.c	2024-03-19 00:23:39.644058337 +0300
@@ -4725,7 +4725,7 @@
 	int err = 0;
 	unsigned int i;
 #if defined(CONFIG_REGULATOR)
-	static const char *const regulator_names[] = { "mali", "shadercores" };
+	static const char *const regulator_names[] = { "mali", NULL };
 	BUILD_BUG_ON(ARRAY_SIZE(regulator_names) < BASE_MAX_NR_CLOCKS_REGULATORS);
 #endif /* CONFIG_REGULATOR */
 
@@ -4771,7 +4771,7 @@
 	 * operating with a partial initialization of clocks.
 	 */
 	for (i = 0; i < BASE_MAX_NR_CLOCKS_REGULATORS; i++) {
-		kbdev->clocks[i] = of_clk_get(kbdev->dev->of_node, (int)i);
+		kbdev->clocks[i] = of_clk_get_by_name(kbdev->dev->of_node, "bus");
 		if (IS_ERR(kbdev->clocks[i])) {
 			err = PTR_ERR(kbdev->clocks[i]);
 			kbdev->clocks[i] = NULL;
