diff -rupbN linux.orig/drivers/bluetooth/hci_qca.c linux/drivers/bluetooth/hci_qca.c
--- linux.orig/drivers/bluetooth/hci_qca.c	2024-10-19 13:35:28.740974311 +0000
+++ linux/drivers/bluetooth/hci_qca.c	2024-10-20 13:11:02.833204047 +0000
@@ -844,8 +844,8 @@ static void device_woke_up(struct hci_ua
 	switch (qca->tx_ibs_state) {
 	case HCI_IBS_TX_AWAKE:
 		/* Expect one if we send 2 WAKEs */
-		BT_DBG("Received HCI_IBS_WAKE_ACK in tx state %d",
-		       qca->tx_ibs_state);
+		//BT_DBG("Received HCI_IBS_WAKE_ACK in tx state %d",
+		//       qca->tx_ibs_state);
 		break;
 
 	case HCI_IBS_TX_WAKING:
@@ -862,8 +862,8 @@ static void device_woke_up(struct hci_ua
 
 	case HCI_IBS_TX_ASLEEP:
 	default:
-		BT_ERR("Received HCI_IBS_WAKE_ACK in tx state %d",
-		       qca->tx_ibs_state);
+		//BT_ERR("Received HCI_IBS_WAKE_ACK in tx state %d",
+		//       qca->tx_ibs_state);
 		break;
 	}
 
diff -rupbN linux.orig/drivers/clk/qcom/clk-alpha-pll.c linux/drivers/clk/qcom/clk-alpha-pll.c
--- linux.orig/drivers/clk/qcom/clk-alpha-pll.c	2024-10-19 13:35:28.772975024 +0000
+++ linux/drivers/clk/qcom/clk-alpha-pll.c	2024-10-19 16:26:48.617154041 +0000
@@ -1725,7 +1725,7 @@ static int __alpha_pll_trion_set_rate(st
 	udelay(1);
 	regmap_read(pll->clkr.regmap, PLL_MODE(pll), &val);
 	if (!(val & latch_ack)) {
-		pr_err("Lucid PLL latch failed. Output may be unstable!\n");
+		//pr_err("Lucid PLL latch failed. Output may be unstable!\n");
 		return -EINVAL;
 	}
 
diff -rupbN linux.orig/drivers/remoteproc/qcom_q6v5_pas.c linux/drivers/remoteproc/qcom_q6v5_pas.c
--- linux.orig/drivers/remoteproc/qcom_q6v5_pas.c	2024-10-19 13:35:30.157005891 +0000
+++ linux/drivers/remoteproc/qcom_q6v5_pas.c	2024-10-19 17:33:34.080642933 +0000
@@ -316,8 +316,8 @@ static int adsp_start(struct rproc *rpro
 
 	ret = qcom_scm_pas_auth_and_reset(adsp->pas_id);
 	if (ret) {
-		dev_err(adsp->dev,
-			"failed to authenticate image and release reset\n");
+		//dev_err(adsp->dev,
+			//"failed to authenticate image and release reset\n");
 		goto release_pas_metadata;
 	}
 
diff -rupbN linux.orig/drivers/remoteproc/remoteproc_core.c linux/drivers/remoteproc/remoteproc_core.c
--- linux.orig/drivers/remoteproc/remoteproc_core.c	2024-10-19 13:35:30.157005891 +0000
+++ linux/drivers/remoteproc/remoteproc_core.c	2024-10-19 17:14:13.894431961 +0000
@@ -1301,7 +1301,7 @@ static int rproc_start(struct rproc *rpr
 	/* power up the remote processor */
 	ret = rproc->ops->start(rproc);
 	if (ret) {
-		dev_err(dev, "can't start rproc %s: %d\n", rproc->name, ret);
+		//dev_err(dev, "can't start rproc %s: %d\n", rproc->name, ret);
 		goto unprepare_subdevices;
 	}
 
diff -rupbN linux.orig/sound/soc/codecs/lpass-va-macro.c linux/sound/soc/codecs/lpass-va-macro.c
--- linux.orig/sound/soc/codecs/lpass-va-macro.c	2024-10-19 13:35:30.909022660 +0000
+++ linux/sound/soc/codecs/lpass-va-macro.c	2024-10-19 16:10:08.002104745 +0000
@@ -1530,7 +1530,7 @@ static int va_macro_probe(struct platfor
 	ret = of_property_read_u32(dev->of_node, "qcom,dmic-sample-rate",
 				   &sample_rate);
 	if (ret) {
-		dev_err(dev, "qcom,dmic-sample-rate dt entry missing\n");
+		//dev_err(dev, "qcom,dmic-sample-rate dt entry missing\n");
 		va->dmic_clk_div = VA_MACRO_CLK_DIV_2;
 	} else {
 		ret = va_macro_validate_dmic_sample_rate(sample_rate, va);
diff -rupbN linux.orig/sound/soc/qcom/qdsp6/q6asm.c linux/sound/soc/qcom/qdsp6/q6asm.c
--- linux.orig/sound/soc/qcom/qdsp6/q6asm.c	2024-10-19 13:35:30.949023554 +0000
+++ linux/sound/soc/qcom/qdsp6/q6asm.c	2024-10-19 13:37:08.787203507 +0000
@@ -655,8 +655,8 @@ static int32_t q6asm_stream_callback(str
 			}
 			break;
 		default:
-			dev_err(ac->dev, "command[0x%x] not expecting rsp\n",
-				result->opcode);
+			//dev_err(ac->dev, "command[0x%x] not expecting rsp\n",
+			//	result->opcode);
 			break;
 		}
 
@@ -782,8 +782,8 @@ static int q6asm_srvc_callback(struct ap
 			wake_up(&a->mem_wait);
 			break;
 		default:
-			dev_err(&adev->dev, "command[0x%x] not expecting rsp\n",
-				 result->opcode);
+			//dev_err(&adev->dev, "command[0x%x] not expecting rsp\n",
+			//	 result->opcode);
 			break;
 		}
 		goto done;
diff -rupbN linux.orig/sound/soc/soc-pcm.c linux/sound/soc/soc-pcm.c
--- linux.orig/sound/soc/soc-pcm.c	2024-10-19 13:35:30.953023643 +0000
+++ linux/sound/soc/soc-pcm.c	2024-10-19 13:40:11.291260901 +0000
@@ -2497,8 +2497,8 @@ static int dpcm_fe_dai_prepare(struct sn
 	/* there is no point preparing this FE if there are no BEs */
 	if (list_empty(&fe->dpcm[stream].be_clients)) {
 		/* dev_err_once() for visibility, dev_dbg() for debugging UCM profiles */
-		dev_err_once(fe->dev, "ASoC: no backend DAIs enabled for %s, possibly missing ALSA mixer-based routing or UCM profile\n",
-			     fe->dai_link->name);
+		//dev_err_once(fe->dev, "ASoC: no backend DAIs enabled for %s, possibly missing ALSA mixer-based routing or UCM profile\n",
+		//	     fe->dai_link->name);
 		dev_dbg(fe->dev, "ASoC: no backend DAIs enabled for %s\n",
 			fe->dai_link->name);
 		ret = -EINVAL;
